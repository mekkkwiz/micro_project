#include <16F886.h>
#device ADC=10 *=16

#FUSES NOWDT                    //No Watch Dog Timer
#FUSES PUT                      //Power Up Timer
#FUSES NOMCLR                   //Master Clear pin not enabled
#FUSES NOPROTECT                //Code not protected from reading
#FUSES NOCPD                    //No EE protection
#FUSES BROWNOUT                 //Brownout reset
#FUSES IESO                     //Internal External Switch Over mode enabled
#FUSES FCMEN                    //Fail-safe clock monitor enabled
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#FUSES NODEBUG                  //No Debug mode for ICD
#FUSES NOWRT                    //Program memory not write protected
#FUSES BORV40                   //Brownout reset at 4.0V
#FUSES RESERVED                 //Used to set the reserved FUSE bits
#FUSES INTRC_IO 

#use delay(clock=8M)

#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8)

#define RUN_BUTTON   PIN_B7
#define _FLEX_LCD216_H  //  LCD Type 16x2
//#define _FLEX_LCD416_H  //  LCD Type 16x4
// Assign MCU's pin to LCD
#define LCD_DB4   PIN_A0
#define LCD_DB5   PIN_A1
#define LCD_DB6   PIN_A2
#define LCD_DB7   PIN_A3
#define LCD_RS    PIN_C1
#define LCD_E     PIN_A5

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <lcd.c>


int16 START_TIME = 65059;

//Happy Birthday
int16 arr[25] = {
65059,65059,65111,65059,65179,65157,65059,65059,65111,65059,65218,65179,
65059,65059,65306,65252,65179,65157,65111,
65268,65268,65252,65179,65218,65179
};
int16 time[25] = {
100,80,140,120,120,140,100,80,140,120,120,140,100,80,140,140,120,120,120,100,80,140,120,120,120
};

#INT_TIMER1
void timer1_isr(){
   set_timer1(START_TIME);
   output_toggle(PIN_A0);
}

//lcd display function
void lcd_Show(long f){
      lcd_gotoxy(5, 2);           // Go to column 5 row 2
      printf(lcd_putc,"%lu",f);
      lcd_gotoxy(12,2);
      lcd_putc("Hz");
}

//calculate given frequency to timer
int16 convertTimer(long f){
   return 65536 - (1000000/(4*f));
}

void main()
{
   //initial code for setup timer for interrupt
   setup_timer_1(T1_INTERNAL | T1_DIV_BY_4);
   set_timer1(START_TIME);
   enable_interrupts(INT_TIMER1);
   enable_interrupts(GLOBAL);
   //-----------------------------------------------------//
   //var decaration
   int lastButton = -1;
   int inputFeq = 500;
   //-----------------------------------------------------//
   long default_feq [6] = {1043, 1175, 1319, 1399, 1565, 1764};
   long current_feq [6];
   //copy arr from defalut -> current for initialize value
   int loop;
   for(loop = 0; loop < 10; loop++) {
      current_feq[loop] = default_feq[loop];
   }
   //-----------------------------------------------------//
   boolean setIsPressed = input(PIN_B7);
   While(1){
      if(setIsPressed){
         current_feq[lastButton-1] = inputFeq;
      }
      if(input(PIN_B3)){
         lastButton = 1;
         START_TIME  = convertTimer(current_feq[1-1])
      }
      else if(input(PIN_B2)){
         lastButton = 2;
      }
      else if(input(PIN_B1)){
         lastButton = 3;
      }
      else if(input(PIN_B0)){
         lastButton = 4;
      }
      else if(input(PIN_C5)){
         lastButton = 5;
      }
      else if(input(PIN_C4)){
         lastButton = 6;
      }
      
   }  
}
